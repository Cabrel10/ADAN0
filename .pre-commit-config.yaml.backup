# Configuration pour pre-commit
# Installation : pre-commit install
# Mise à jour : pre-commit autoupdate
repos:
  # Hooks de base
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        args: [--markdown-linebreak-ext=md]
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
      - id: check-ast
      - id: check-case-conflict
      - id: check-docstring-first
      - id: check-json
      - id: check-merge-conflict
      - id: check-symlinks

  # Formattage de code
  - repo: https://github.com/psf/black
    rev: 23.7.0
    hooks:
      - id: black
        language_version: python3.11
        args: [--line-length=79]

  # Tri des imports
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        name: isort (python)
        args: [--profile=black, --filter-files]

  # Linting
  - repo: https://github.com/pycqa/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        additional_dependencies: [
          'flake8-bugbear',
          'flake8-comprehensions',
          'flake8-bandit'
        ]

  # Vérification de typage
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.5.0
    hooks:
      - id: mypy
        additional_dependencies: [types-python-dateutil, types-requests]
        args: [--ignore-missing-imports]

  # Détection de code mort
  - repo: https://github.com/jendrikseipp/vulture
    rev: v2.10
    hooks:
      - id: vulture
        args: [--min-confidence=70, src/adan_trading_bot]
        exclude: 'tests/|examples/|setup\.py|docs/'

  # Analyse de sécurité
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: [-c, .bandit.yml]
        exclude: 'tests/|examples/|setup\.py|docs/'

  # Analyse de complexité
      - id: destroyed-symlinks
      - id: requirements-txt-fixer
      - id: mixed-line-ending
        args: [--fix=lf]
      - id: name-tests-test
      - id: no-commit-to-branch
        args: [--branch=main,master,develop,dev]

  # Formattage du code avec Black
  - repo: https://github.com/psf/black
    rev: 24.1.1
    hooks:
      - id: black
        name: black (python)
        language_version: python3.11
        args: [--line-length=88, --target-version=py311]

  - repo: https://github.com/pycqa/isort
    rev: 5.13.2
    hooks:
      - id: isort
        name: isort (python)
        args: [--profile=black, --line-length=88]

  - repo: https://github.com/pycqa/flake8
    rev: 7.0.0
    hooks:
      - id: flake8
        additional_dependencies: [flake8-bugbear==24.1.5, flake8-comprehensions==3.14.0]
        args: [--max-line-length=88, --ignore=E203, E501, W503]

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        additional_dependencies: [types-python-dateutil, types-pytz, types-requests, types-PyYAML]
        args: [--ignore-missing-imports, --disallow-untyped-defs]
        exclude: ^tests/

  # Vérification de sécurité avec bandit
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        name: bandit (sécurité)
        args: [--configfile=pyproject.toml, -ll, -iii, -x,tests/]
        exclude: ^(tests/|examples/|docs/|setup\.py$|docs/conf\.py|scripts/)

  # Vérification des dépendances de sécurité
  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.3.0
    hooks:
      - id: python-safety-dependencies-check
        name: safety (dépendances)
        files: ^(requirements.*\.(txt|in)|setup\.py|pyproject\.toml)$

  # Vérification des imports non utilisés
  - repo: https://github.com/PyCQA/autoflake
    rev: v2.2.1
    hooks:
      - id: autoflake
        name: autoflake (imports inutilisés)
        args: [
          --in-place,
          --remove-all-unused-imports,
          --remove-duplicate-keys,
          --remove-unused-variables,
          --remove-rhs-imports,
          --expand-star-imports,
          --ignore-init-module-imports,
        ]

  # Vérification des docstrings
  - repo: https://github.com/PyCQA/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        name: pydocstyle (docstrings)
        additional_dependencies: [toml]
        args: [
          --convention=google,
          --add-ignore=D100,D101,D102,D103,D104,D105,D106,D107,D200,D202,D204,D205,D206,D207,D208,D209,D211,D300,D301,D400,D401,D402,D403,D404,D405,D406,D407,D408,D409,D410,D411,D412,D413,D414,D415,D416,D417,D418,D419,D420,D421,D422,D423,D424,D425,D426,D427,D428,D429,D430,D431,D433,D434,D435,D436,D437
        ]
        exclude: ^(tests/|examples/|docs/|setup\.py$|docs/conf\.py|scripts/)

  # Vérification des fichiers de configuration YAML
  - repo: https://github.com/adrienverge/yamllint.git
    rev: v1.32.0
    hooks:
      - id: yamllint
        name: yamllint (yaml)
        args: [--strict, --config-file=.yamllint.yml]
        types: [yaml]

  # Vérification des fichiers Markdown
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.36.0
    hooks:
      - id: markdownlint
        name: markdownlint (markdown)
        args: [--config=.markdownlint.json, --fix]
        types: [markdown]

  # Vérification des fichiers de configuration TOML
  - repo: https://github.com/sdispater/poetry
    rev: 1.6.1
    hooks:
      - id: poetry-check
        name: poetry (vérification)
        entry: poetry check
        language: system
        types: [toml]
        pass_filenames: false

  # Vérification des fichiers JSON
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.0.0
    hooks:
      - id: prettier
        name: prettier (formatage)
        types: [json, yaml, markdown, html, css, scss, javascript, jsx]
        args: [--write, --prose-wrap=always, --print-width=88, --tab-width=2, --use-tabs=false, --single-quote=true, --trailing-comma=es5, --bracket-same-line=false, --arrow-parens=always, --end-of-line=lf, --quote-props=as-needed, --semi=true, --jsx-single-quote=false, --bracket-spacing=true, --jsx-bracket-same-line=false, --overwrite, --loglevel=warn]
        exclude: \.min\.(js|css)$

  # Vérification des fichiers de documentation
  - repo: https://github.com/executablebooks/mdformat
    rev: 0.7.16
    hooks:
      - id: mdformat
        name: mdformat (markdown)
        additional_dependencies: [mdformat-gfm, mdformat-toc, mdformat-frontmatter]
        args: [--wrap=88, --end-of-line=lf, --number]
        types: [markdown]

  # Hooks de vérification de code Python supplémentaires
  - repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.10.0
    hooks:
      - id: python-check-blanket-noqa
      - id: python-check-blanket-type-ignore
      - id: python-no-eval
      - id: python-use-type-annotations
      - id: python-no-log-w-logs
      - id: python-no-log-format
      - id: python-no-assert-for-testing
      - id: python-no-print-statement
      - id: python-use-sys-exit

  # Vérification de la qualité du code avec pylint
  - repo: https://github.com/pycqa/pylint
    rev: v3.0.3
    hooks:
      - id: pylint
        name: pylint (python)
        entry: pylint --rcfile=pyproject.toml
        types: [python]
        additional_dependencies: ["pylint-pytest", "pylint-unittest"]
        args:
          - --disable=C0114,C0115,C0116,R0903,R0913,R0902

  # Vérification de la sécurité avec safety
  - repo: https://github.com/pyupio/safety
    rev: 2.3.5
    hooks:
      - id: safety
        name: safety (sécurité des dépendances)
        args: ["check", "--full-report"]
        files: ^(requirements.*\.(txt|in)|setup\.py|pyproject\.toml)$

  # Détection de secrets dans le code
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        name: detect-secrets (détection de secrets)
        args: ["--baseline", ".secrets.baseline"]
        exclude: \.secrets\.baseline$

  # Vérification des dépendances obsolètes
  - repo: https://github.com/jazzband/pip-tools
    rev: 7.3.0
    hooks:
      - id: pip-compile
        name: pip-compile (mise à jour des dépendances)
        args: [--allow-unsafe, --upgrade, --generate-hashes]
        files: ^requirements.*\.(txt|in)$
        pass_filenames: false

  # Vérification des migrations manquantes
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        name: mypy (vérification des types)
        additional_dependencies: [types-python-dateutil, types-pytz, types-requests, types-PyYAML]
        args: [--ignore-missing-imports, --disallow-untyped-defs, --strict-optional, --warn-unused-ignores, --warn-redundant-casts, --warn-return-any, --warn-unreachable, --strict-equality]
        exclude: ^tests/

  # Vérification de la documentation avec pydocstyle
  - repo: https://github.com/pycqa/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
        name: pydocstyle (docstrings)
        additional_dependencies: [toml]
        args: [
          --convention=google,
          --add-ignore=D100,D101,D102,D103,D104,D105,D106,D107,D200,D202,D204
        ]
        exclude: ^(tests/|examples/|docs/|setup\.py$|docs/conf\.py|scripts/)

  # Vérification de la complexité avec radon
  - repo: https://github.com/rubik/radon
    rev: 6.0.1
    hooks:
      - id: radon-cc
        name: radon (complexité cyclomatique)
        entry: radon cc --min C .
        language: python
        types: [python]
        exclude: ^(tests/|examples/|docs/)

  # Vérification des dépendances avec pip-audit
  - repo: https://github.com/pypa/pip-audit
    rev: v2.7.5
    hooks:
      - id: pip-audit
        name: pip-audit (audit des dépendances)
        args: [--requirement, requirements.txt, --ignore-vuln, "GHSA-*", "PYSEC-*"]
        pass_filenames: false

  # Vérification des vulnérabilités avec bandit
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        name: bandit (sécurité)
        args: [--configfile=pyproject.toml, -ll, -iii, -x,tests/]
        exclude: ^(tests/|examples/|docs/|setup\.py$|docs/conf\.py|scripts/)

  # Vérification de la couverture de code
  - repo: https://github.com/codecov/codecov-action
    rev: v3
    hooks:
      - id: codecov
        name: codecov (couverture de code)
        args: [--token, "${{ secrets.CODECOV_TOKEN }}", "--file", "coverage.xml", "--flags", "unittests"]
        pass_filenames: false
        verbose: true

  # Vérification des dépendances avec pip-check
  - repo: https://github.com/your-tools/pip-check
    rev: v1.0.0
    hooks:
      - id: pip-check
        name: pip-check (vérification des dépendances)
        args: [--requirement, requirements.txt]
        pass_filenames: false

  # Vérification des dépendances avec pipdeptree
  - repo: https://github.com/tox-dev/pipdeptree
    rev: 2.13.1
    hooks:
      - id: pipdeptree
        name: pipdeptree (arbre des dépendances)
        args: [--warn, fail]
        pass_filenames: false

  # Vérification des dépendances avec pip-tools
  - repo: https://github.com/jazzband/pip-tools
    rev: 7.3.0
    hooks:
      - id: pip-compile
        name: pip-compile (mise à jour des dépendances)
        args: [--allow-unsafe, --upgrade, --generate-hashes]
        files: ^requirements.*\.(txt|in)$
        pass_filenames: false

  # Vérification des dépendances avec pip-audit
  - repo: https://github.com/pypa/pip-audit
    rev: v2.7.5
    hooks:
      - id: pip-audit
        name: pip-audit (audit des dépendances)
        args: [--requirement, requirements.txt, --ignore-vuln, "GHSA-*", "PYSEC-*"]
        pass_filenames: false

  # Vérification des dépendances avec safety
  - repo: https://github.com/pyupio/safety
    rev: 2.3.5
    hooks:
      - id: safety
        name: safety (sécurité des dépendances)
        args: ["check", "--full-report"]
        files: ^(requirements.*\.(txt|in)|setup\.py|pyproject\.toml)$

  # Vérification des dépendances avec pip-check
  - repo: https://github.com/your-tools/pip-check
    rev: v1.0.0
    hooks:
      - id: pip-check
        name: pip-check (vérification des dépendances)
        args: [--requirement, requirements.txt]
        pass_filenames: false

  # Vérification des dépendances avec pipdeptree
  - repo: https://github.com/tox-dev/pipdeptree
    rev: 2.13.1
    hooks:
      - id: pipdeptree
        name: pipdeptree (arbre des dépendances)
        args: [--warn, fail]
        pass_filenames: false
