# ======================================
# Configuration ADAN Trading Bot
# ======================================
# Copiez ce fichier en .env et modifiez les valeurs selon vos besoins.
# NE COMMITTEZ JAMAIS DE VÉRITABLES CLÉS ou SECRETS !

# ============ Configuration Générale ============

# Niveau de journalisation (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Environnement d'exécution (dev, test, staging, prod)
ENVIRONMENT=dev

# Clé secrète pour les sessions (générer avec: openssl rand -hex 32)
SECRET_KEY=change_this_to_a_secure_random_string

# ============ Configuration des API d'échange ============

# Binance (obligatoire pour le mode live)
BINANCE_API_KEY=your_binance_api_key_here
BINANCE_API_SECRET=your_binance_api_secret_here

# Autres échanges (optionnels)
# COINBASE_API_KEY=your_coinbase_api_key_here
# COINBASE_API_SECRET=your_coinbase_secret_here
# KRAKEN_API_KEY=your_kraken_api_key_here
# KRAKEN_PRIVATE_KEY=your_kraken_private_key_here

# ============ Paramètres de Trading ============

# Capital initial en USDT
INITIAL_CAPITAL=10000.0

# Gestion du risque
MAX_POSITION_SIZE=0.1        # 10% du capital par trade
MAX_DAILY_TRADES=10          # Nombre maximal de trades par jour
MAX_DRAWDOWN=0.2             # Drawdown maximal autorisé (20%)
COMMISSION=0.001             # Commission de trading (0.1%)

# ============ Configuration du Modèle ============

# Répertoire pour sauvegarder les modèles entraînés
MODEL_SAVE_PATH=./models

# Hyperparamètres (peuvent être surchargés dans config.yaml)
LEARNING_RATE=0.0003
GAMMA=0.99
BATCH_SIZE=64
BUFFER_SIZE=100000

# ============ Base de Données ============

# PostgreSQL (optionnel, requis pour le stockage des données historiques)
DB_HOST=localhost
DB_PORT=5432
DB_NAME=adan_trading
DB_USER=postgres
DB_PASSWORD=your_secure_password

# Redis (optionnel, pour le cache et les files d'attente)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=

# ============ API et Interface Web ============

# Configuration du serveur API
API_HOST=0.0.0.0
API_PORT=8000
API_WORKERS=4
API_RELOAD=True  # Rechargement automatique en développement

# Clé API pour l'accès aux endpoints protégés
API_KEY=your_api_key_here

# Configuration CORS (séparer les origines par des virgules)
CORS_ORIGINS=http://localhost:3000,http://localhost:8000

# ============ Monitoring et Alertes ============

# Prometheus (optionnel)
PROMETHEUS_MULTIPROC_DIR=./prometheus_data

# Sentry (optionnel, pour le suivi des erreurs)
SENTRY_DSN=your_sentry_dsn_here

# Slack Webhook pour les alertes (optionnel)
SLACK_WEBHOOK_URL=your_slack_webhook_url

# ============ Développement ============

# Activer le mode débogage (désactiver en production!)
DEBUG=True

# Niveau de journalisation des requêtes HTTP
HTTP_LOG_LEVEL=info

# Désactiver la vérification SSL pour le développement
# (Ne jamais utiliser en production!)
PYTHONHTTPSVERIFY=0

# ============ Tests ============

# Configuration spécifique aux tests
TEST_DB_NAME=adan_trading_test
PYTEST_ADDOPTS=-v --cov=src --cov-report=term-missing
